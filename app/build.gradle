plugins {
	id 'com.android.application' version '8.10.0'
}

android {
    defaultConfig {
		compileSdk = 35
		buildToolsVersion = "35.0.0"
        applicationId("com.wiley.fordummies.androidsdk.tictactoe")
        minSdkVersion(27)
        targetSdkVersion(35)
        versionCode = 1
        versionName = "1.0"
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

		javaCompileOptions {
			annotationProcessorOptions {
				arguments += [
						"room.incremental": "true",
						"room.expandProjection": "true" ]
			}
		}
    }
    compileOptions {
		coreLibraryDesugaringEnabled = true
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
	buildTypes {
		debug {
		}
        release {
            minifyEnabled = false
        }
    }
	buildFeatures {
		viewBinding = true
	}
	namespace = "com.wiley.fordummies.androidsdk.tictactoe"
}

dependencies {
    implementation(fileTree(include: ["*.jar"], dir: "libs"))

	constraints {
		implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:2.0.21") {
			because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
		}
		implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:2.0.21") {
			because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
		}
	}

	coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:$rootProject.desugar_version")

    implementation("androidx.appcompat:appcompat:$rootProject.appcompat_version")

	// Lifecycle
	implementation("androidx.lifecycle:lifecycle-viewmodel:$rootProject.lifecycle_version")
	implementation("androidx.lifecycle:lifecycle-livedata:$rootProject.lifecycle_version")
	implementation("androidx.lifecycle:lifecycle-common-java8:$rootProject.lifecycle_version")
	implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycle_version")

	implementation("androidx.activity:activity:$rootProject.activity_version")
    implementation("androidx.recyclerview:recyclerview:$rootProject.recyclerview_version")
    implementation("androidx.preference:preference:$rootProject.preference_version")
	implementation("androidx.datastore:datastore-preferences:$rootProject.datastore_version")
	implementation("androidx.datastore:datastore-preferences-rxjava3:$rootProject.datastore_version")

	implementation("androidx.browser:browser:$rootProject.browser_version")

	implementation("androidx.core:core:$rootProject.core_version")
	implementation("androidx.core:core-splashscreen:$rootProject.splash_version")

	implementation("androidx.room:room-runtime:$rootProject.room_version")
	annotationProcessor("androidx.room:room-compiler:$rootProject.room_version")

	implementation("androidx.constraintlayout:constraintlayout:$rootProject.constraint_version")
	implementation("androidx.work:work-runtime:$rootProject.work_version")

	// Mapbox dependencies for maps
	implementation("com.mapbox.maps:android:$rootProject.mapbox_sdk_version")
	implementation("com.mapbox.search:mapbox-search-android-ui:$rootProject.mapbox_search_version")

	implementation("com.jakewharton.timber:timber:$rootProject.timber_version")
	debugImplementation("com.squareup.leakcanary:leakcanary-android:$rootProject.leakcanary_version")
	// releaseImplementation("com.squareup.leakcanary:leakcanary-android-noop:$rootProject.leakcanary_version")

	implementation("com.squareup.okio:okio:$rootProject.okio_version")
	implementation("com.squareup.okhttp3:okhttp:$rootProject.okhttp_version")
	implementation("com.squareup.retrofit2:retrofit:$rootProject.retrofit_version")
	implementation("com.squareup.retrofit2:converter-scalars:$rootProject.retrofit_version")
	implementation("com.squareup.moshi:moshi:$rootProject.moshi_version")
	implementation("com.squareup.retrofit2:converter-moshi:$rootProject.retrofit_version")
	implementation("com.github.bumptech.glide:glide:$rootProject.glide_version")

	// Skip this if you don't want to use integration libraries or configure Glide.
	annotationProcessor("com.github.bumptech.glide:compiler:$rootProject.glide_version")
	debugImplementation("com.squareup.leakcanary:leakcanary-android:$rootProject.leakcanary_version")

	// Testing - JUnit
	testImplementation("junit:junit:$rootProject.junit_version")
	androidTestImplementation("androidx.test.ext:junit:$rootProject.junit_ext_version")

	// Core library
	androidTestImplementation("androidx.test:core:$rootProject.androidx_test_core_version")

	// AndroidJUnitRunner and JUnit Rules
	androidTestImplementation("androidx.test:runner:$rootProject.runner_version")
	androidTestImplementation("androidx.test:rules:$rootProject.rules_version")

	// Espresso and dependencies
    androidTestImplementation("androidx.test.espresso:espresso-core:$rootProject.espresso_version")
	// Espresso dependencies
	androidTestImplementation("androidx.test.espresso:espresso-contrib:$rootProject.espresso_version")
	androidTestImplementation("androidx.test.espresso:espresso-intents:$rootProject.espresso_version")
	androidTestImplementation("androidx.test.espresso:espresso-accessibility:$rootProject.espresso_version")
	androidTestImplementation("androidx.test.espresso:espresso-web:$rootProject.espresso_version")
	androidTestImplementation("androidx.test.espresso.idling:idling-concurrent:$rootProject.espresso_version")

}

